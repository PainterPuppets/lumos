name: publish
on:
  push:
    branches:
      - "v[0-9]+.[0-9]+.[0-9]+*"
      - "next/v[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: write # for checkout and tag
  pull-requests: write # for comments
  packages: write # for publish

jobs:
  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8.4.0
      - uses: actions/setup-node@v3
        with:
          cache: 'pnpm'

      - name: Install project dependencies and build
        run: |
          pnpm install --frozen-lockfile
          npm run build
          git diff --exit-code

      - name: Prettier check
        run: npm run lint

      - name: Run test with coverage
        run: npm run test-coverage

      - uses: codecov/codecov-action@v3
        with:
          files: ./coverage/cobertura-coverage.xml
          verbose: true # optional (default = false)

  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8.4.0
      - uses: actions/setup-node@v3
        with:
          cache: 'pnpm'

      - name: Install project dependencies and build
        run: |
          pnpm install --frozen-lockfile
          npm run build
      - name: e2e test
        run: npm run e2e-test

  lint-staged:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8.4.0
      - uses: actions/setup-node@v3
        with:
          cache: 'pnpm'

      - name: Install project dependencies and build
        run: |
          pnpm install --frozen-lockfile
          npm run build
      - name: Get changed files
        uses: tj-actions/changed-files@v17.3
        id: changed-files
        with:
          files: |
            packages/**/src/**/*.ts
            packages/**/tests/**/*.ts
      - name: Show all matching files
        run: |
          echo "${{ steps.changed-files.outputs.all_changed_files }};"
      - name: Run lint for changed files
        if: ${{ steps.changed-files.outputs.all_changed_files != '' }}
        run: |
          npx eslint -c .eslintrc.next.js ${{ steps.changed-files.outputs.all_changed_files }}
  publish:
    needs: [test-unit, test-e2e, lint-staged]
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8.4.0
      - name: Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'
          registry-url: "https://registry.npmjs.org"
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install
        run: pnpm install --frozen-lockfile
      # Define ${CURRENT_VERSION}
      - name: Set Current Version
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
      - name: Prerelease Check
        id: prerelease_check
        run: |
          if [[ ${REF_NAME} =~ ^next\/v[0-9]+\.[0-9]+\.[0-9]+.* ]]; then
              echo ::set-output name=prerelease::true
          else
              echo ::set-output name=prerelease::false
          fi
        env:
          REF_NAME: ${{ github.ref_name }}
      - name: Tag Check
        id: tag_check
        run: |
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "::set-output name=exists_tag::true"
          else
            echo "::set-output name=exists_tag::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Git Tag
        if: steps.tag_check.outputs.exists_tag == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          version: ${{ env.CURRENT_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"

      - name: Run generate-changelog
        id: generate-changelog
        uses: autowarefoundation/autoware-github-actions/generate-changelog@v1

      - name: Show result
        run: |
          echo "$CHANGELOG"
        env:
          CHANGELOG: ${{ steps.generate-changelog.outputs.changelog }}

      - name: Create Release
        id: create_release
        if: steps.tag_check.outputs.exists_tag == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.CURRENT_VERSION }}
          body: ${{ env.CHANGELOG }}
          release_name: ${{ env.CURRENT_VERSION }}
          draft: false
          prerelease: ${{ steps.tag_check.prerelease_check.prerelease }}

      - name: Publish
        if: steps.tag_check.outputs.exists_tag == 'false'
        run: |
          npm run build
          npx lerna publish from-package --yes --dist-tag $([ $PRERELEASE == 'true' ] && echo 'next' || echo 'latest')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          PRERELEASE: ${{ steps.prerelease_check.outputs.prerelease }}
